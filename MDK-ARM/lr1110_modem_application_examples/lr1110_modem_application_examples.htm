<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [lr1110_modem_application_examples\lr1110_modem_application_examples.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image lr1110_modem_application_examples\lr1110_modem_application_examples.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Jun 23 17:56:52 2021
<BR><P>
<H3>Maximum Stack Usage =       1936 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; tracker_run_wifi_scan &rArr; wifi_execute_scan &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[1d]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC1_2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3a]">ADC3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[20]">CAN1_RX1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[21]">CAN1_SCE_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1e]">CAN1_TX_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4b]">COMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[48]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[49]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4a]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[35]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[16]">DMA1_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[17]">DMA1_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[18]">DMA1_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[19]">DMA1_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[43]">DMA2_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[44]">DMA2_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[45]">DMA2_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[46]">DMA2_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[47]">DMA2_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[50]">DMA2_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI0_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[33]">EXTI15_10_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI3_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI4_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[22]">EXTI9_5_IRQHandler</a> from smtc_hal_gpio.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3b]">FMC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from smtc_hal_mcu.o(i.HardFault_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2b]">I2C1_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2a]">I2C1_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2d]">I2C2_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2c]">I2C2_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[54]">I2C3_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[53]">I2C3_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[59]">LCD_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4c]">LPTIM1_IRQHandler</a> from smtc_hal_tmr.o(i.LPTIM1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4d]">LPTIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[51]">LPUART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4e]">OTG_FS_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c]">PVD_PVM_IRQHandler</a> from smtc_hal_mcu.o(i.PVD_PVM_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[52]">QUADSPI_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[10]">RCC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5a]">RNG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[34]">RTC_Alarm_IRQHandler</a> from smtc_hal_rtc.o(i.RTC_Alarm_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e]">RTC_WKUP_IRQHandler</a> from smtc_hal_rtc.o(i.RTC_WKUP_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[55]">SAI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[56]">SAI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3c]">SDMMC1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2f]">SPI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[57]">SWPMI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from smtc_hal_mcu.o(i.SysTick_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[d]">TAMP_STAMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[23]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[26]">TIM1_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[25]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[24]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[27]">TIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[28]">TIM3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[29]">TIM4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3d]">TIM5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[41]">TIM6_DAC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[42]">TIM7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[36]">TIM8_BRK_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[39]">TIM8_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[38]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[37]">TIM8_UP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[58]">TSC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5f]">UART_DMAAbortOnError</a> from stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[30]">USART1_IRQHandler</a> from smtc_hal_uart.o(i.USART1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from smtc_hal_uart.o(i.USART2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[32]">USART3_IRQHandler</a> from smtc_hal_uart.o(i.USART3_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[60]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[0]">lis2de12_int1_irq_handler</a> from lis2de12.o(i.lis2de12_int1_irq_handler) referenced 2 times from lis2de12.o(.data)
 <LI><a href="#[70]">lr1110_modem_adr_mobile_to_static</a> from main_tracker.o(i.lr1110_modem_adr_mobile_to_static) referenced from main_tracker.o(i.main)
 <LI><a href="#[66]">lr1110_modem_alarm</a> from main_tracker.o(i.lr1110_modem_alarm) referenced from main_tracker.o(i.main)
 <LI><a href="#[69]">lr1110_modem_down_data</a> from main_tracker.o(i.lr1110_modem_down_data) referenced from main_tracker.o(i.main)
 <LI><a href="#[6c]">lr1110_modem_gnss_scan_done</a> from gnss_scan.o(i.lr1110_modem_gnss_scan_done) referenced from main_tracker.o(i.main)
 <LI><a href="#[68]">lr1110_modem_join_fail</a> from main_tracker.o(i.lr1110_modem_join_fail) referenced from main_tracker.o(i.main)
 <LI><a href="#[6b]">lr1110_modem_mute</a> from main_tracker.o(i.lr1110_modem_mute) referenced from main_tracker.o(i.main)
 <LI><a href="#[67]">lr1110_modem_network_joined</a> from main_tracker.o(i.lr1110_modem_network_joined) referenced from main_tracker.o(i.main)
 <LI><a href="#[71]">lr1110_modem_new_link_adr</a> from main_tracker.o(i.lr1110_modem_new_link_adr) referenced from main_tracker.o(i.main)
 <LI><a href="#[72]">lr1110_modem_no_event</a> from main_tracker.o(i.lr1110_modem_no_event) referenced from main_tracker.o(i.main)
 <LI><a href="#[65]">lr1110_modem_reset_event</a> from main_tracker.o(i.lr1110_modem_reset_event) referenced from main_tracker.o(i.main)
 <LI><a href="#[6a]">lr1110_modem_set_conf</a> from main_tracker.o(i.lr1110_modem_set_conf) referenced from main_tracker.o(i.main)
 <LI><a href="#[6e]">lr1110_modem_stream_done</a> from main_tracker.o(i.lr1110_modem_stream_done) referenced from main_tracker.o(i.main)
 <LI><a href="#[6f]">lr1110_modem_time_updated_alc_sync</a> from main_tracker.o(i.lr1110_modem_time_updated_alc_sync) referenced from main_tracker.o(i.main)
 <LI><a href="#[6d]">lr1110_modem_wifi_scan_done</a> from wifi_scan.o(i.lr1110_modem_wifi_scan_done) referenced from main_tracker.o(i.main)
 <LI><a href="#[5c]">main</a> from main_tracker.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[61]">on_gnss_scan_timeout_event</a> from gnss_scan.o(i.on_gnss_scan_timeout_event) referenced from gnss_scan.o(i.gnss_scan_init)
 <LI><a href="#[74]">on_led_rx_timer_event</a> from main_tracker.o(i.on_led_rx_timer_event) referenced from main_tracker.o(i.main)
 <LI><a href="#[73]">on_led_tx_timer_event</a> from main_tracker.o(i.on_led_tx_timer_event) referenced from main_tracker.o(i.main)
 <LI><a href="#[64]">on_lr1110_modem_reset_timeout_event</a> from lr1110_modem_hal.o(i.on_lr1110_modem_reset_timeout_event) referenced from lr1110_modem_hal.o(i.lr1110_modem_hal_reset)
 <LI><a href="#[62]">on_soft_watchdog_event</a> from smtc_hal_mcu.o(i.on_soft_watchdog_event) referenced from smtc_hal_mcu.o(i.hal_mcu_init_software_watchdog)
 <LI><a href="#[75]">on_wifi_scan_timeout_event</a> from wifi_scan.o(i.on_wifi_scan_timeout_event) referenced from wifi_scan.o(i.wifi_init)
 <LI><a href="#[63]">radio_event_callback</a> from lr1110.o(i.radio_event_callback) referenced from lr1110-modem-board.o(i.lr1110_modem_board_init_io_context)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[1d4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[76]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1d6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1d7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1d8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1d9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_ms_2_tick
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compensate_pressure
</UL>

<P><STRONG><a name="[1b9]"></a>localtime</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, localtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_init_app_ctx
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_scan_done
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_scan_done
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_gnss_scan
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_and_stream_payload
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_wifi_scan
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_out
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_start_alarm
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[1da]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1db]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_get_detected_satellites
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_in
</UL>

<P><STRONG><a name="[1dd]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1cd]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_tcxo_io
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_tcxo_io
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_tcxo_io
</UL>

<P><STRONG><a name="[1de]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1df]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1e0]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[82]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ee]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[77]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1e2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1e3]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI0_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI1_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI2_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI3_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI4_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, smtc_hal_gpio.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[14b]"></a>HAL_DBGMCU_DisableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_DBGMCU_DisableDBGSleepMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_gpio_init
</UL>

<P><STRONG><a name="[14d]"></a>HAL_DBGMCU_DisableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_DBGMCU_DisableDBGStandbyMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_gpio_init
</UL>

<P><STRONG><a name="[14c]"></a>HAL_DBGMCU_DisableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_DBGMCU_DisableDBGStopMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_gpio_init
</UL>

<P><STRONG><a name="[d9]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_blink
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bme280_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
</UL>

<P><STRONG><a name="[9c]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 292 bytes, Stack size 20 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[8e]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, smtc_hal_gpio.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[9e]"></a>HAL_GPIO_Init</STRONG> (Thumb, 480 bytes, Stack size 20 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[136]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_value
</UL>

<P><STRONG><a name="[137]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[8d]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM_Disable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm_IT
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_DeactivateAlarm
</UL>

<P><STRONG><a name="[13d]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>

<P><STRONG><a name="[13e]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2CEx_ConfigDigitalFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>

<P><STRONG><a name="[8f]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = HAL_I2C_DeInit &rArr; HAL_I2C_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit
</UL>

<P><STRONG><a name="[91]"></a>HAL_I2C_Init</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>

<P><STRONG><a name="[93]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_register16
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_buffer
</UL>

<P><STRONG><a name="[98]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 402 bytes, Stack size 48 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_register8
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_buffer
</UL>

<P><STRONG><a name="[90]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, smtc_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HAL_I2C_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[92]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 344 bytes, Stack size 40 bytes, smtc_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = HAL_I2C_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[e9]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[9f]"></a>HAL_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[a1]"></a>HAL_InitTick</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a7]"></a>HAL_LPTIM_AutoReloadMatchCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_AutoReloadMatchCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>HAL_LPTIM_AutoReloadWriteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_AutoReloadWriteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>HAL_LPTIM_CompareMatchCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_CompareMatchCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>HAL_LPTIM_CompareWriteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_CompareWriteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>HAL_LPTIM_DirectionDownCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_DirectionDownCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>HAL_LPTIM_DirectionUpCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_DirectionUpCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>HAL_LPTIM_IRQHandler</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LPTIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_TriggerCallback
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_DirectionUpCallback
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_DirectionDownCallback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_CompareWriteCallback
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_CompareMatchCallback
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_AutoReloadWriteCallback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_AutoReloadMatchCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>HAL_LPTIM_Init</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_LPTIM_Init &rArr; HAL_LPTIM_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_tmr_init
</UL>

<P><STRONG><a name="[ae]"></a>HAL_LPTIM_MspInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, smtc_hal_tmr.o(i.HAL_LPTIM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_LPTIM_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_Init
</UL>

<P><STRONG><a name="[b0]"></a>HAL_LPTIM_TimeOut_Stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_TimeOut_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_LPTIM_TimeOut_Stop &rArr; LPTIM_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM1_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>HAL_LPTIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_lptim.o(i.HAL_LPTIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>HAL_MspInit</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[af]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_pvd_config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[a4]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_pvd_config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[a0]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[15e]"></a>HAL_PWREx_EnterSTOP2Mode</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_EnterSTOP2Mode))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_enter_stop_mode
</UL>

<P><STRONG><a name="[e8]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[161]"></a>HAL_PWR_ConfigPVD</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr.o(i.HAL_PWR_ConfigPVD))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_pvd_config
</UL>

<P><STRONG><a name="[162]"></a>HAL_PWR_EnablePVD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr.o(i.HAL_PWR_EnablePVD))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_pvd_config
</UL>

<P><STRONG><a name="[b4]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1230 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_re_config_after_stop
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
</UL>

<P><STRONG><a name="[b7]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_re_config_after_stop
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
</UL>

<P><STRONG><a name="[ba]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
</UL>

<P><STRONG><a name="[b9]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[bb]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[b8]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[bc]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1660 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_re_config_after_stop
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
</UL>

<P><STRONG><a name="[16d]"></a>HAL_RTCEx_EnableBypassShadow</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc_ex.o(i.HAL_RTCEx_EnableBypassShadow))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_RTCEx_WakeUpTimerEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc_ex.o(i.HAL_RTCEx_WakeUpTimerEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerIRQHandler
</UL>

<P><STRONG><a name="[be]"></a>HAL_RTCEx_WakeUpTimerIRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc_ex.o(i.HAL_RTCEx_WakeUpTimerIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WKUP_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_RTC_AlarmAEventCallback</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.HAL_RTC_AlarmAEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_RTC_AlarmAEventCallback &rArr; timer_irq_handler &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
</UL>

<P><STRONG><a name="[c2]"></a>HAL_RTC_DeactivateAlarm</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_DeactivateAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_DeactivateAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_stop_alarm
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
</UL>

<P><STRONG><a name="[c3]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_timestamp_in_ticks
</UL>

<P><STRONG><a name="[c5]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_timestamp_in_ticks
</UL>

<P><STRONG><a name="[c6]"></a>HAL_RTC_Init</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
</UL>

<P><STRONG><a name="[c7]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[ca]"></a>HAL_RTC_SetAlarm_IT</STRONG> (Thumb, 530 bytes, Stack size 32 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetAlarm_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_start_alarm
</UL>

<P><STRONG><a name="[cc]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
</UL>

<P><STRONG><a name="[cd]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
</UL>

<P><STRONG><a name="[ce]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>

<P><STRONG><a name="[cf]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = HAL_SPI_DeInit &rArr; HAL_SPI_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_deinit
</UL>

<P><STRONG><a name="[d1]"></a>HAL_SPI_Init</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
</UL>

<P><STRONG><a name="[d0]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, smtc_hal_spi.o(i.HAL_SPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HAL_SPI_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[d2]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, smtc_hal_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[166]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
</UL>

<P><STRONG><a name="[d4]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
</UL>

<P><STRONG><a name="[d3]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[db]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>HAL_UART_DeInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>

<P><STRONG><a name="[da]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[d7]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[dd]"></a>HAL_UART_Init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[d6]"></a>HAL_UART_MspDeInit</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, smtc_hal_uart.o(i.HAL_UART_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HAL_UART_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>

<P><STRONG><a name="[de]"></a>HAL_UART_MspInit</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, smtc_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = HAL_UART_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e2]"></a>HAL_UART_Transmit</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx
</UL>

<P><STRONG><a name="[ea]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = HardFault_Handler &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smtc_hal_tmr.o(i.LPTIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPTIM1_IRQHandler &rArr; HAL_LPTIM_TimeOut_Stop &rArr; LPTIM_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_TimeOut_Stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>LPTIM_Disable</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, stm32l4xx_hal_lptim.o(i.LPTIM_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LPTIM_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_TimeOut_Stop
</UL>

<P><STRONG><a name="[c]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.PVD_PVM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = PVD_PVM_IRQHandler &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.RTC_Alarm_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RTC_Alarm_IRQHandler &rArr; HAL_RTC_AlarmAEventCallback &rArr; timer_irq_handler &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[cb]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm_IT
</UL>

<P><STRONG><a name="[c8]"></a>RTC_EnterInitMode</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[c9]"></a>RTC_ExitInitMode</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[e]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.RTC_WKUP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_WKUP_IRQHandler &rArr; HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e1]"></a>UART_CheckIdleState</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[df]"></a>UART_SetConfig</STRONG> (Thumb, 1150 bytes, Stack size 40 bytes, stm32l4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[e3]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_uart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_uart.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1e6]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[1e7]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[1e8]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[1cc]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[1e9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1ea]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1eb]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1bc]"></a>acc_get_raw_x</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lis2de12.o(i.acc_get_raw_x))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bd]"></a>acc_get_raw_y</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lis2de12.o(i.acc_get_raw_y))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1be]"></a>acc_get_raw_z</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lis2de12.o(i.acc_get_raw_z))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>acc_get_temperature</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lis2de12.o(i.acc_get_temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = acc_get_temperature &rArr; lis2de12_temperature_raw_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temperature_raw_get
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temp_data_ready_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>acc_read_raw_data</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lis2de12.o(i.acc_read_raw_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = acc_read_raw_data &rArr; lis2de12_xl_data_ready_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_xl_data_ready_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_from_fs2_to_mg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get_z
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get_y
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get_x
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>accelerometer_init</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, lis2de12.o(i.accelerometer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = accelerometer_init &rArr; lis2de12_temperature_meas_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_irq1_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temperature_meas_set
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_pin_int1_config_set
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_pin_notification_mode_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_threshold_set
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_duration_set
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_conf_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_high_pass_int_conf_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_full_scale_set
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_fifo_mode_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_device_id_get
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_data_rate_set
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_block_data_update_set
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_periph
</UL>

<P><STRONG><a name="[112]"></a>bmp280_init</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, bmp280.o(i.bmp280_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bmp280_init &rArr; read_hum_calibration_data &rArr; read_register16 &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_register8
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hum_calibration_data
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_calibration_data
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bme280_init
</UL>

<P><STRONG><a name="[111]"></a>bmp280_init_default_params</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bmp280.o(i.bmp280_init_default_params))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bme280_init
</UL>

<P><STRONG><a name="[117]"></a>bmp280_read_fixed</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, bmp280.o(i.bmp280_read_fixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bmp280_read_fixed &rArr; read_data &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compensate_pressure
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compensate_humidity
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_float
</UL>

<P><STRONG><a name="[11a]"></a>bmp280_read_float</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, bmp280.o(i.bmp280_read_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bmp280_read_float &rArr; bmp280_read_fixed &rArr; read_data &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_fixed
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11d]"></a>external_supply_deinit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, external_supply.o(i.external_supply_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = external_supply_deinit &rArr; hal_gpio_deinit &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit_periph
</UL>

<P><STRONG><a name="[11f]"></a>external_supply_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, external_supply.o(i.external_supply_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = external_supply_init &rArr; hal_gpio_init_out &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_out
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_periph
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit_periph
</UL>

<P><STRONG><a name="[1c0]"></a>get_accelerometer_irq1_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lis2de12.o(i.get_accelerometer_irq1_state))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[126]"></a>gnss_scan_execute</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, gnss_scan.o(i.gnss_scan_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = gnss_scan_execute &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_event_process
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_low_power_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_scan_autonomous_md
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_scan_assisted_md
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_get_nb_detected_satellites
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_get_detected_satellites
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_lna_on
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_lna_off
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_gnss_scan
</UL>

<P><STRONG><a name="[131]"></a>gnss_scan_init</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gnss_scan.o(i.gnss_scan_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = gnss_scan_init &rArr; gnss_scan_configure &rArr; lr1110_modem_gnss_set_constellations_to_use &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_gnss_scan
</UL>

<P><STRONG><a name="[125]"></a>gnss_scan_set_type</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gnss_scan.o(i.gnss_scan_set_type))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_configure
</UL>

<P><STRONG><a name="[11e]"></a>hal_gpio_deinit</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, smtc_hal_gpio.o(i.hal_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = hal_gpio_deinit &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_supply_deinit
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_deinit
</UL>

<P><STRONG><a name="[135]"></a>hal_gpio_get_value</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, smtc_hal_gpio.o(i.hal_gpio_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_get_value
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_read_event_line
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_unbusy
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_busy
</UL>

<P><STRONG><a name="[10c]"></a>hal_gpio_init_in</STRONG> (Thumb, 80 bytes, Stack size 72 bytes, smtc_hal_gpio.o(i.hal_gpio_init_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = hal_gpio_init_in &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_irq1_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_io
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_deinit_io
</UL>

<P><STRONG><a name="[120]"></a>hal_gpio_init_out</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, smtc_hal_gpio.o(i.hal_gpio_init_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = hal_gpio_init_out &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_supply_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_io
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_deinit_io
</UL>

<P><STRONG><a name="[138]"></a>hal_gpio_irq_attach</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, smtc_hal_gpio.o(i.hal_gpio_irq_attach))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[13a]"></a>hal_gpio_set_value</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, smtc_hal_gpio.o(i.hal_gpio_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_on
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_off
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wakeup
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lna_on
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lna_off
</UL>

<P><STRONG><a name="[13b]"></a>hal_i2c_deinit</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, smtc_hal_i2c.o(i.hal_i2c_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = hal_i2c_deinit &rArr; HAL_I2C_DeInit &rArr; HAL_I2C_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit
</UL>

<P><STRONG><a name="[13c]"></a>hal_i2c_init</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, smtc_hal_i2c.o(i.hal_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = hal_i2c_init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit
</UL>

<P><STRONG><a name="[13f]"></a>hal_i2c_read_buffer</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, smtc_hal_i2c.o(i.hal_i2c_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>

<P><STRONG><a name="[141]"></a>hal_i2c_write_buffer</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, smtc_hal_i2c.o(i.hal_i2c_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
</UL>

<P><STRONG><a name="[15c]"></a>hal_mcu_critical_section_begin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.hal_mcu_critical_section_begin))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_exit_stop_mode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_enter_stop_mode
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>

<P><STRONG><a name="[15d]"></a>hal_mcu_critical_section_end</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.hal_mcu_critical_section_end))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_exit_stop_mode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_enter_stop_mode
</UL>

<P><STRONG><a name="[14e]"></a>hal_mcu_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = hal_mcu_init &rArr; hal_spi_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_io_context
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_io
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_tmr_init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_config
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_pvd_config
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_gpio_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>hal_mcu_init_periph</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_init_periph))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = hal_mcu_init_periph &rArr; accelerometer_init &rArr; lis2de12_temperature_meas_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_supply_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[159]"></a>hal_mcu_init_software_watchdog</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_init_software_watchdog))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = hal_mcu_init_software_watchdog &rArr; timer_set_value &rArr; timer_stop &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12e]"></a>hal_mcu_low_power_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_low_power_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = hal_mcu_low_power_handler &rArr; hal_mcu_lpm_exit_stop_mode &rArr; hal_mcu_reinit &rArr; hal_spi_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_exit_stop_mode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_enter_stop_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>hal_mcu_panic</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_panic))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_begin
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_tmr_init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[1b8]"></a>hal_mcu_partial_sleep_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.hal_mcu_partial_sleep_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>hal_mcu_reset</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.hal_mcu_reset))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_reset_event
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_alarm
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVD_PVM_IRQHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_soft_watchdog_event
</UL>

<P><STRONG><a name="[164]"></a>hal_mcu_reset_software_watchdog</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_reset_software_watchdog))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = hal_mcu_reset_software_watchdog &rArr; timer_reset &rArr; timer_start &rArr; timer_insert_new_head_timer &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>hal_mcu_trace_print</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, smtc_hal_mcu.o(i.hal_mcu_trace_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_buffer
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_frame
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_stream_done
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_reset_event
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_no_event
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_new_link_adr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_mute
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_join_fail
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_down_data
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_alarm
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;join_network
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bme280_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_payload_in_streaming_fifo
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVD_PVM_IRQHandler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_soft_watchdog_event
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>

<P><STRONG><a name="[1c7]"></a>hal_rtc_get_minimum_timeout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_hal_rtc.o(i.hal_rtc_get_minimum_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_timeout
</UL>

<P><STRONG><a name="[16b]"></a>hal_rtc_get_time_ms</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, smtc_hal_rtc.o(i.hal_rtc_get_time_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_calendar_time
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_unbusy
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_busy
</UL>

<P><STRONG><a name="[1c6]"></a>hal_rtc_get_time_ref_in_ticks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smtc_hal_rtc.o(i.hal_rtc_get_time_ref_in_ticks))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_handler
</UL>

<P><STRONG><a name="[16c]"></a>hal_rtc_get_timer_elapsed_value</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, smtc_hal_rtc.o(i.hal_rtc_get_timer_elapsed_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_rtc_get_timer_elapsed_value &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_timestamp_in_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_handler
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_timeout
</UL>

<P><STRONG><a name="[156]"></a>hal_rtc_init</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, smtc_hal_rtc.o(i.hal_rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = hal_rtc_init &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_EnableBypassShadow
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_DeactivateAlarm
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_set_time_ref_in_ticks
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[16f]"></a>hal_rtc_ms_2_tick</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, smtc_hal_rtc.o(i.hal_rtc_ms_2_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_rtc_ms_2_tick &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
</UL>

<P><STRONG><a name="[16e]"></a>hal_rtc_set_time_ref_in_ticks</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.hal_rtc_set_time_ref_in_ticks))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_rtc_set_time_ref_in_ticks &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_timestamp_in_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_handler
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_init
</UL>

<P><STRONG><a name="[170]"></a>hal_rtc_start_alarm</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, smtc_hal_rtc.o(i.hal_rtc_start_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm_IT
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_stop_alarm
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_timeout
</UL>

<P><STRONG><a name="[171]"></a>hal_rtc_stop_alarm</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.hal_rtc_stop_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_rtc_stop_alarm &rArr; HAL_RTC_DeactivateAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_DeactivateAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_start_alarm
</UL>

<P><STRONG><a name="[16a]"></a>hal_rtc_tick_2_ms</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smtc_hal_rtc.o(i.hal_rtc_tick_2_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_rtc_tick_2_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_calendar_time
</UL>

<P><STRONG><a name="[144]"></a>hal_spi_deinit</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, smtc_hal_spi.o(i.hal_spi_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = hal_spi_deinit &rArr; HAL_SPI_DeInit &rArr; HAL_SPI_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit
</UL>

<P><STRONG><a name="[1a6]"></a>hal_spi_in_out</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, smtc_hal_spi.o(i.hal_spi_in_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_spi_in_out
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>

<P><STRONG><a name="[153]"></a>hal_spi_init</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, smtc_hal_spi.o(i.hal_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = hal_spi_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit
</UL>

<P><STRONG><a name="[150]"></a>hal_tmr_init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, smtc_hal_tmr.o(i.hal_tmr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = hal_tmr_init &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPTIM_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[146]"></a>hal_uart_deinit</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, smtc_hal_uart.o(i.hal_uart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = hal_uart_deinit &rArr; HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit
</UL>

<P><STRONG><a name="[152]"></a>hal_uart_init</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, smtc_hal_uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = hal_uart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_panic
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit
</UL>

<P><STRONG><a name="[172]"></a>hal_uart_tx</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, smtc_hal_uart.o(i.hal_uart_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[178]"></a>is_accelerometer_detected_moved</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lis2de12.o(i.is_accelerometer_detected_moved))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = is_accelerometer_detected_moved &rArr; lis2de12_int1_gen_source_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_source_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17c]"></a>leds_blink</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, leds.o(i.leds_blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = leds_blink &rArr; leds_on &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_on
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_off
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>leds_deinit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, leds.o(i.leds_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = leds_deinit &rArr; hal_gpio_deinit &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit_periph
</UL>

<P><STRONG><a name="[158]"></a>leds_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, leds.o(i.leds_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = leds_init &rArr; hal_gpio_init_out &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_out
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_periph
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit_periph
</UL>

<P><STRONG><a name="[17d]"></a>leds_off</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, leds.o(i.leds_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = leds_off &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_blink
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_led_tx_timer_event
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_led_rx_timer_event
</UL>

<P><STRONG><a name="[17e]"></a>leds_on</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, leds.o(i.leds_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = leds_on &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_blink
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_down_data
</UL>

<P><STRONG><a name="[f7]"></a>lis2de12_acceleration_raw_get</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_acceleration_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_acceleration_raw_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
</UL>

<P><STRONG><a name="[f8]"></a>lis2de12_acceleration_raw_get_x</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_acceleration_raw_get_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_acceleration_raw_get_x &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
</UL>

<P><STRONG><a name="[f9]"></a>lis2de12_acceleration_raw_get_y</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_acceleration_raw_get_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_acceleration_raw_get_y &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
</UL>

<P><STRONG><a name="[fa]"></a>lis2de12_acceleration_raw_get_z</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_acceleration_raw_get_z))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_acceleration_raw_get_z &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
</UL>

<P><STRONG><a name="[100]"></a>lis2de12_block_data_update_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_block_data_update_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[fe]"></a>lis2de12_data_rate_set</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_data_rate_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[fd]"></a>lis2de12_device_id_get</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_device_id_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[101]"></a>lis2de12_fifo_mode_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_fifo_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_fifo_mode_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[fb]"></a>lis2de12_from_fs2_to_mg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lis2de12.o(i.lis2de12_from_fs2_to_mg))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
</UL>

<P><STRONG><a name="[102]"></a>lis2de12_full_scale_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_full_scale_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_full_scale_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[105]"></a>lis2de12_high_pass_int_conf_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_high_pass_int_conf_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_high_pass_int_conf_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[108]"></a>lis2de12_int1_gen_conf_set</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_int1_gen_conf_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_int1_gen_conf_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[10a]"></a>lis2de12_int1_gen_duration_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_int1_gen_duration_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_int1_gen_duration_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[179]"></a>lis2de12_int1_gen_source_get</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_int1_gen_source_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_int1_gen_source_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_accelerometer_detected_moved
</UL>

<P><STRONG><a name="[109]"></a>lis2de12_int1_gen_threshold_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_int1_gen_threshold_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_int1_gen_threshold_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[0]"></a>lis2de12_int1_irq_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lis2de12.o(i.lis2de12_int1_irq_handler))
<BR>[Address Reference Count : 1]<UL><LI> lis2de12.o(.data)
</UL>
<P><STRONG><a name="[107]"></a>lis2de12_int1_pin_notification_mode_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_int1_pin_notification_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_int1_pin_notification_mode_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[106]"></a>lis2de12_pin_int1_config_set</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_pin_int1_config_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_pin_int1_config_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[103]"></a>lis2de12_read_reg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lis2de12.o(i.lis2de12_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_read_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_xl_data_ready_get
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temperature_raw_get
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temperature_meas_set
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temp_data_ready_get
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_pin_notification_mode_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_threshold_set
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_source_get
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_duration_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_high_pass_int_conf_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_full_scale_set
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_fifo_mode_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_device_id_get
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_data_rate_set
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_block_data_update_set
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get_z
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get_y
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get_x
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_acceleration_raw_get
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[f3]"></a>lis2de12_temp_data_ready_get</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_temp_data_ready_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_temp_data_ready_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_get_temperature
</UL>

<P><STRONG><a name="[ff]"></a>lis2de12_temperature_meas_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_temperature_meas_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_temperature_meas_set &rArr; lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_write_reg
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[f4]"></a>lis2de12_temperature_raw_get</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_temperature_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_temperature_raw_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_get_temperature
</UL>

<P><STRONG><a name="[104]"></a>lis2de12_write_reg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lis2de12.o(i.lis2de12_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lis2de12_write_reg &rArr; hal_i2c_write_buffer &rArr; i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_temperature_meas_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_pin_int1_config_set
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_pin_notification_mode_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_threshold_set
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_duration_set
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_int1_gen_conf_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_high_pass_int_conf_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_full_scale_set
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_fifo_mode_set
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_data_rate_set
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_block_data_update_set
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[f6]"></a>lis2de12_xl_data_ready_get</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lis2de12.o(i.lis2de12_xl_data_ready_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lis2de12_xl_data_ready_get &rArr; lis2de12_read_reg &rArr; hal_i2c_read_buffer &rArr; i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis2de12_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
</UL>

<P><STRONG><a name="[17f]"></a>lna_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, external_supply.o(i.lna_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lna_off &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_lna_off
</UL>

<P><STRONG><a name="[180]"></a>lna_on</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, external_supply.o(i.lna_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lna_on &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_lna_on
</UL>

<P><STRONG><a name="[145]"></a>lr1110_modem_board_deinit_io</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lr1110-modem-board.o(i.lr1110_modem_board_deinit_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lr1110_modem_board_deinit_io &rArr; hal_gpio_init_in &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_out
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_in
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit
</UL>

<P><STRONG><a name="[18a]"></a>lr1110_modem_board_get_systime_from_gps</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lr1110-modem-board.o(i.lr1110_modem_board_get_systime_from_gps))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lr1110_modem_board_get_systime_from_gps &rArr; lr1110_modem_get_gps_time &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_gps_time
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[193]"></a>lr1110_modem_board_get_tcxo_wakeup_time</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lr1110-modem-board.o(i.lr1110_modem_board_get_tcxo_wakeup_time))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_tcxo_io
</UL>

<P><STRONG><a name="[18c]"></a>lr1110_modem_board_init</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lr1110-modem-board.o(i.lr1110_modem_board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = lr1110_modem_board_init &rArr; lr1110_modem_hal_reset &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_rf_output
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_event_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_tcxo_io
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_system_set_reg_mode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_system_set_dio_as_rf_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[155]"></a>lr1110_modem_board_init_io</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lr1110-modem-board.o(i.lr1110_modem_board_init_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lr1110_modem_board_init_io &rArr; hal_gpio_init_in &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_out
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_in
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit
</UL>

<P><STRONG><a name="[154]"></a>lr1110_modem_board_init_io_context</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lr1110-modem-board.o(i.lr1110_modem_board_init_io_context))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[1ab]"></a>lr1110_modem_board_is_ready</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lr1110-modem-board.o(i.lr1110_modem_board_is_ready))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_reset_event
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
</UL>

<P><STRONG><a name="[12f]"></a>lr1110_modem_board_lna_off</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lr1110-modem-board.o(i.lr1110_modem_board_lna_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lr1110_modem_board_lna_off &rArr; lna_off &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lna_off
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
</UL>

<P><STRONG><a name="[129]"></a>lr1110_modem_board_lna_on</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lr1110-modem-board.o(i.lr1110_modem_board_lna_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lr1110_modem_board_lna_on &rArr; lna_on &rArr; hal_gpio_set_value
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lna_on
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
</UL>

<P><STRONG><a name="[195]"></a>lr1110_modem_board_read_event_line</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lr1110-modem-board.o(i.lr1110_modem_board_read_event_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lr1110_modem_board_read_event_line &rArr; hal_gpio_get_value
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_event_process
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1aa]"></a>lr1110_modem_board_set_ready</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lr1110-modem-board.o(i.lr1110_modem_board_set_ready))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_reset_event
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
</UL>

<P><STRONG><a name="[196]"></a>lr1110_modem_derive_keys</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_derive_keys))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = lr1110_modem_derive_keys &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[128]"></a>lr1110_modem_event_process</STRONG> (Thumb, 680 bytes, Stack size 1072 bytes, lr1110.o(i.lr1110_modem_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_read_event_line
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_event
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
</UL>

<P><STRONG><a name="[1cf]"></a>lr1110_modem_extract_channel_from_info_byte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lr1110_modem_wifi.o(i.lr1110_modem_extract_channel_from_info_byte))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_complete_mac_to_results
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_basic_mac_to_results
</UL>

<P><STRONG><a name="[1d0]"></a>lr1110_modem_extract_signal_type_from_data_rate_info</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lr1110_modem_wifi.o(i.lr1110_modem_extract_signal_type_from_data_rate_info))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_complete_mac_to_results
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_basic_mac_to_results
</UL>

<P><STRONG><a name="[19b]"></a>lr1110_modem_get_adr_profile</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_adr_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = lr1110_modem_get_adr_profile &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19d]"></a>lr1110_modem_get_charge</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_charge))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_charge &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19e]"></a>lr1110_modem_get_chip_eui</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_chip_eui))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_chip_eui &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19f]"></a>lr1110_modem_get_dev_eui</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_dev_eui))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_dev_eui &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19a]"></a>lr1110_modem_get_event</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_event_size
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_event_process
</UL>

<P><STRONG><a name="[1a0]"></a>lr1110_modem_get_event_size</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_event_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_event
</UL>

<P><STRONG><a name="[18b]"></a>lr1110_modem_get_gps_time</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_gps_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_gps_time &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_get_systime_from_gps
</UL>

<P><STRONG><a name="[1a1]"></a>lr1110_modem_get_join_eui</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_join_eui))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_join_eui &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a2]"></a>lr1110_modem_get_pin</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_get_pin &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[188]"></a>lr1110_modem_get_status</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = lr1110_modem_get_status &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_alarm
</UL>

<P><STRONG><a name="[1a3]"></a>lr1110_modem_get_version</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_get_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = lr1110_modem_get_version &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>lr1110_modem_gnss_get_detected_satellites</STRONG> (Thumb, 114 bytes, Stack size 104 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_get_detected_satellites))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lr1110_modem_gnss_get_detected_satellites &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
</UL>

<P><STRONG><a name="[12c]"></a>lr1110_modem_gnss_get_nb_detected_satellites</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_get_nb_detected_satellites))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = lr1110_modem_gnss_get_nb_detected_satellites &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
</UL>

<P><STRONG><a name="[1a4]"></a>lr1110_modem_gnss_push_solver_msg</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_push_solver_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_gnss_push_solver_msg &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_frame
</UL>

<P><STRONG><a name="[12b]"></a>lr1110_modem_gnss_scan_assisted_md</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_scan_assisted_md))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_gnss_scan_assisted_md &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
</UL>

<P><STRONG><a name="[12a]"></a>lr1110_modem_gnss_scan_autonomous_md</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_scan_autonomous_md))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_gnss_scan_autonomous_md &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
</UL>

<P><STRONG><a name="[6c]"></a>lr1110_modem_gnss_scan_done</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gnss_scan.o(i.lr1110_modem_gnss_scan_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lr1110_modem_gnss_scan_done
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[122]"></a>lr1110_modem_gnss_set_assistance_position</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_set_assistance_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_gnss_set_assistance_position &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_init
</UL>

<P><STRONG><a name="[124]"></a>lr1110_modem_gnss_set_constellations_to_use</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lr1110_modem_gnss.o(i.lr1110_modem_gnss_set_constellations_to_use))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_gnss_set_constellations_to_use &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_configure
</UL>

<P><STRONG><a name="[19c]"></a>lr1110_modem_hal_read</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, lr1110_modem_hal.o(i.lr1110_modem_hal_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_in_out
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wakeup
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_unbusy
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_busy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_compute_crc
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_stream_status
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_version
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_status
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_pin
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_join_eui
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_dev_eui
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_chip_eui
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_charge
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_adr_profile
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_gps_time
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_event_size
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_event
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_get_nb_detected_satellites
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_get_detected_satellites
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_read_cumulative_timing
</UL>

<P><STRONG><a name="[18e]"></a>lr1110_modem_hal_reset</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, lr1110_modem_hal.o(i.lr1110_modem_hal_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = lr1110_modem_hal_reset &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_event_process
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_set_ready
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_is_ready
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
</UL>

<P><STRONG><a name="[1a5]"></a>lr1110_modem_hal_wakeup</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lr1110_modem_hal.o(i.lr1110_modem_hal_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_unbusy
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_busy
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>

<P><STRONG><a name="[197]"></a>lr1110_modem_hal_write</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, lr1110_modem_hal.o(i.lr1110_modem_hal_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_in_out
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wakeup
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_unbusy
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wait_on_busy
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_compute_crc
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_stream_init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_region
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_join_eui
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_dm_info_interval
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_dm_info_field
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_dev_eui
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_class
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_alc_sync_mode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_alarm_timer
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_adr_profile
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_send_stream_data
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_join
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_set_assistance_position
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_push_solver_msg
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_derive_keys
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_rf_output
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_set_constellations_to_use
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_scan_autonomous_md
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_scan_assisted_md
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_reset_cumulative_timing
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_passive_scan
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_cfg_hardware_debarker
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_system_set_tcxo_mode
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_system_set_reg_mode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_system_set_dio_as_rf_switch
</UL>

<P><STRONG><a name="[17b]"></a>lr1110_modem_join</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_join))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = lr1110_modem_join &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;join_network
</UL>

<P><STRONG><a name="[10f]"></a>lr1110_modem_send_stream_data</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_send_stream_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_send_stream_data &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_payload_in_streaming_fifo
</UL>

<P><STRONG><a name="[1ac]"></a>lr1110_modem_set_adr_profile</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_adr_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_set_adr_profile &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_network_joined
</UL>

<P><STRONG><a name="[1ad]"></a>lr1110_modem_set_alarm_timer</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_alarm_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_set_alarm_timer &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[186]"></a>lr1110_modem_set_alc_sync_mode</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_alc_sync_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_set_alc_sync_mode &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
</UL>

<P><STRONG><a name="[182]"></a>lr1110_modem_set_class</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_class))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_set_class &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
</UL>

<P><STRONG><a name="[1ae]"></a>lr1110_modem_set_dev_eui</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_dev_eui))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_set_dev_eui &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[184]"></a>lr1110_modem_set_dm_info_field</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_dm_info_field))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = lr1110_modem_set_dm_info_field &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
</UL>

<P><STRONG><a name="[185]"></a>lr1110_modem_set_dm_info_interval</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_dm_info_interval))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_set_dm_info_interval &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
</UL>

<P><STRONG><a name="[1af]"></a>lr1110_modem_set_join_eui</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_join_eui))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_set_join_eui &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[183]"></a>lr1110_modem_set_region</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_set_region &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
</UL>

<P><STRONG><a name="[191]"></a>lr1110_modem_set_rf_output</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_set_rf_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_set_rf_output &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
</UL>

<P><STRONG><a name="[187]"></a>lr1110_modem_stream_init</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_stream_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_stream_init &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
</UL>

<P><STRONG><a name="[10e]"></a>lr1110_modem_stream_status</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, lr1110_modem_lorawan.o(i.lr1110_modem_stream_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lr1110_modem_stream_status &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_payload_in_streaming_fifo
</UL>

<P><STRONG><a name="[190]"></a>lr1110_modem_system_set_dio_as_rf_switch</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lr1110_modem_system.o(i.lr1110_modem_system_set_dio_as_rf_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_system_set_dio_as_rf_switch &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
</UL>

<P><STRONG><a name="[192]"></a>lr1110_modem_system_set_reg_mode</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_system.o(i.lr1110_modem_system_set_reg_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_system_set_reg_mode &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
</UL>

<P><STRONG><a name="[194]"></a>lr1110_modem_system_set_tcxo_mode</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, lr1110_modem_system.o(i.lr1110_modem_system_set_tcxo_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lr1110_modem_system_set_tcxo_mode &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_tcxo_io
</UL>

<P><STRONG><a name="[1b0]"></a>lr1110_modem_wifi_cfg_hardware_debarker</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lr1110_modem_wifi.o(i.lr1110_modem_wifi_cfg_hardware_debarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lr1110_modem_wifi_cfg_hardware_debarker &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1b1]"></a>lr1110_modem_wifi_passive_scan</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, lr1110_modem_wifi.o(i.lr1110_modem_wifi_passive_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = lr1110_modem_wifi_passive_scan &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1b2]"></a>lr1110_modem_wifi_read_basic_results</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr1110_modem_wifi.o(i.lr1110_modem_wifi_read_basic_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lr1110_modem_wifi_read_basic_results &rArr; interpret_basic_mac_type_channel_result_from_buffer &rArr; lr1110_wifi_read_mac_address_from_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_basic_mac_type_channel_result_from_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1b3]"></a>lr1110_modem_wifi_read_complete_results</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lr1110_modem_wifi.o(i.lr1110_modem_wifi_read_complete_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lr1110_modem_wifi_read_complete_results &rArr; interpret_basic_complete_result_from_buffer &rArr; uint64_from_array
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_basic_complete_result_from_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1b4]"></a>lr1110_modem_wifi_read_cumulative_timing</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, lr1110_modem_wifi.o(i.lr1110_modem_wifi_read_cumulative_timing))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = lr1110_modem_wifi_read_cumulative_timing &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1b5]"></a>lr1110_modem_wifi_reset_cumulative_timing</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lr1110_modem_wifi.o(i.lr1110_modem_wifi_reset_cumulative_timing))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = lr1110_modem_wifi_reset_cumulative_timing &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[6d]"></a>lr1110_modem_wifi_scan_done</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wifi_scan.o(i.lr1110_modem_wifi_scan_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lr1110_modem_wifi_scan_done
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 1360 bytes, Stack size 160 bytes, main_tracker.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936<LI>Call Chain = main &rArr; tracker_run_wifi_scan &rArr; wifi_execute_scan &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_init_app_ctx
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randr
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_stream_status
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_join_eui
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_dev_eui
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_alarm_timer
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_adr_profile
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_version
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_pin
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_join_eui
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_dev_eui
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_chip_eui
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_charge
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_adr_profile
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_event_process
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_derive_keys
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_read_event_line
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_get_systime_from_gps
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_on
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_blink
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_accelerometer_detected_moved
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reset_software_watchdog
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_partial_sleep_enable
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_low_power_handler
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_software_watchdog
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_periph
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accelerometer_irq1_state
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_float
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_read_raw_data
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_get_temperature
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_get_raw_z
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_get_raw_y
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_get_raw_x
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_wifi_scan
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_gnss_scan
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lorawan_init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;join_network
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_tracker_in_static_mode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_next_scan_possible
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_and_stream_payload
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bme280_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[63]"></a>radio_event_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lr1110.o(i.radio_event_callback))
<BR>[Address Reference Count : 1]<UL><LI> lr1110-modem-board.o(i.lr1110_modem_board_init_io_context)
</UL>
<P><STRONG><a name="[18d]"></a>radio_event_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lr1110.o(i.radio_event_init))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
</UL>

<P><STRONG><a name="[1c2]"></a>rand1</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, utilities.o(i.rand1))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randr
</UL>

<P><STRONG><a name="[1bf]"></a>randr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, utilities.o(i.randr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = randr
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand1
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[132]"></a>timer_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, smtc_hal_tmr_list.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_software_watchdog
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
</UL>

<P><STRONG><a name="[c1]"></a>timer_irq_handler</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, smtc_hal_tmr_list.o(i.timer_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = timer_irq_handler &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_set_time_ref_in_ticks
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_timer_elapsed_value
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_time_ref_in_ticks
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
</UL>

<P><STRONG><a name="[165]"></a>timer_reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, smtc_hal_tmr_list.o(i.timer_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = timer_reset &rArr; timer_start &rArr; timer_insert_new_head_timer &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reset_software_watchdog
</UL>

<P><STRONG><a name="[133]"></a>timer_set_value</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, smtc_hal_tmr_list.o(i.timer_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = timer_set_value &rArr; timer_stop &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_ms_2_tick
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_minimum_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_software_watchdog
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
</UL>

<P><STRONG><a name="[127]"></a>timer_start</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, smtc_hal_tmr_list.o(i.timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = timer_start &rArr; timer_insert_new_head_timer &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_set_time_ref_in_ticks
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_timer_elapsed_value
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_end
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_begin
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert_timer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert_new_head_timer
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_exists
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init_software_watchdog
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_down_data
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_reset
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reset
</UL>

<P><STRONG><a name="[130]"></a>timer_stop</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, smtc_hal_tmr_list.o(i.timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = timer_stop &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_stop_alarm
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_end
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_begin
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_led_tx_timer_event
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_led_rx_timer_event
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reset
</UL>

<P><STRONG><a name="[1b6]"></a>tracker_init_app_ctx</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tracker_utility.o(i.tracker_init_app_ctx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tracker_init_app_ctx
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ce]"></a>wifi_add_basic_mac_to_results</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, wifi_scan.o(i.wifi_add_basic_mac_to_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wifi_add_basic_mac_to_results &rArr; wifi_compute_consumption
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_extract_signal_type_from_data_rate_info
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_extract_channel_from_info_byte
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_compute_consumption
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1d2]"></a>wifi_add_complete_mac_to_results</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, wifi_scan.o(i.wifi_add_complete_mac_to_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wifi_add_complete_mac_to_results &rArr; wifi_compute_consumption
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_extract_signal_type_from_data_rate_info
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_extract_channel_from_info_byte
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_compute_consumption
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
</UL>

<P><STRONG><a name="[1d1]"></a>wifi_compute_consumption</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, wifi_scan.o(i.wifi_compute_consumption))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wifi_compute_consumption
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_complete_mac_to_results
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_basic_mac_to_results
</UL>

<P><STRONG><a name="[1d3]"></a>wifi_configure</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, wifi_scan.o(i.wifi_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wifi_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_init
</UL>

<P><STRONG><a name="[1cb]"></a>wifi_execute_scan</STRONG> (Thumb, 366 bytes, Stack size 440 bytes, wifi_scan.o(i.wifi_execute_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760<LI>Call Chain = wifi_execute_scan &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_event_process
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_low_power_handler
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_reset_cumulative_timing
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_read_cumulative_timing
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_read_complete_results
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_read_basic_results
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_passive_scan
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_cfg_hardware_debarker
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_complete_mac_to_results
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_add_basic_mac_to_results
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_wifi_scan
</UL>

<P><STRONG><a name="[1ca]"></a>wifi_init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wifi_scan.o(i.wifi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = wifi_init &rArr; timer_set_value &rArr; timer_stop &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracker_run_wifi_scan
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[10d]"></a>add_payload_in_streaming_fifo</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main_tracker.o(i.add_payload_in_streaming_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = add_payload_in_streaming_fifo &rArr; lr1110_modem_send_stream_data &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_stream_status
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_send_stream_data
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_and_stream_payload
</UL>

<P><STRONG><a name="[110]"></a>bme280_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main_tracker.o(i.bme280_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = bme280_init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init_default_params
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>build_and_stream_payload</STRONG> (Thumb, 886 bytes, Stack size 8 bytes, main_tracker.o(i.build_and_stream_payload))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = build_and_stream_payload &rArr; add_payload_in_streaming_fifo &rArr; lr1110_modem_send_stream_data &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_payload_in_streaming_fifo
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[121]"></a>gnss_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_tracker.o(i.gnss_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = gnss_init &rArr; lr1110_modem_gnss_set_assistance_position &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_set_assistance_position
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b7]"></a>is_next_scan_possible</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main_tracker.o(i.is_next_scan_possible))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c1]"></a>is_tracker_in_static_mode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main_tracker.o(i.is_tracker_in_static_mode))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17a]"></a>join_network</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main_tracker.o(i.join_network))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = join_network &rArr; lr1110_modem_join &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_join
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[181]"></a>lorawan_init</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, main_tracker.o(i.lorawan_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = lorawan_init &rArr; lr1110_modem_set_dm_info_field &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_stream_init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_region
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_dm_info_interval
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_dm_info_field
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_class
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_alc_sync_mode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>lr1110_modem_adr_mobile_to_static</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_tracker.o(i.lr1110_modem_adr_mobile_to_static))
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[66]"></a>lr1110_modem_alarm</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, main_tracker.o(i.lr1110_modem_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = lr1110_modem_alarm &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_get_status
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reset
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_status_to_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[69]"></a>lr1110_modem_down_data</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, main_tracker.o(i.lr1110_modem_down_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = lr1110_modem_down_data &rArr; parse_frame &rArr; lr1110_modem_gnss_push_solver_msg &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_on
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hex_buffer
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[68]"></a>lr1110_modem_join_fail</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_join_fail))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lr1110_modem_join_fail &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[6b]"></a>lr1110_modem_mute</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_mute))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lr1110_modem_mute &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[67]"></a>lr1110_modem_network_joined</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_network_joined))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = lr1110_modem_network_joined &rArr; lr1110_modem_set_adr_profile &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_set_adr_profile
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[71]"></a>lr1110_modem_new_link_adr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_new_link_adr))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lr1110_modem_new_link_adr &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[72]"></a>lr1110_modem_no_event</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_no_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lr1110_modem_no_event &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[65]"></a>lr1110_modem_reset_event</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_reset_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lr1110_modem_reset_event &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_set_ready
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_is_ready
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[6a]"></a>lr1110_modem_set_conf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_tracker.o(i.lr1110_modem_set_conf))
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[6e]"></a>lr1110_modem_stream_done</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main_tracker.o(i.lr1110_modem_stream_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lr1110_modem_stream_done &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[6f]"></a>lr1110_modem_time_updated_alc_sync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main_tracker.o(i.lr1110_modem_time_updated_alc_sync))
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[189]"></a>modem_status_to_string</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_tracker.o(i.modem_status_to_string))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_alarm
</UL>

<P><STRONG><a name="[74]"></a>on_led_rx_timer_event</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_tracker.o(i.on_led_rx_timer_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = on_led_rx_timer_event &rArr; timer_stop &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[73]"></a>on_led_tx_timer_event</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_tracker.o(i.on_led_tx_timer_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = on_led_tx_timer_event &rArr; timer_stop &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_tracker.o(i.main)
</UL>
<P><STRONG><a name="[199]"></a>parse_frame</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main_tracker.o(i.parse_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = parse_frame &rArr; lr1110_modem_gnss_push_solver_msg &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_push_solver_msg
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_down_data
</UL>

<P><STRONG><a name="[198]"></a>print_hex_buffer</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main_tracker.o(i.print_hex_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = print_hex_buffer &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_down_data
</UL>

<P><STRONG><a name="[1ba]"></a>tracker_run_gnss_scan</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, main_tracker.o(i.tracker_run_gnss_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392<LI>Call Chain = tracker_run_gnss_scan &rArr; gnss_scan_execute &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_execute
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bb]"></a>tracker_run_wifi_scan</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main_tracker.o(i.tracker_run_wifi_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 1776<LI>Call Chain = tracker_run_wifi_scan &rArr; wifi_execute_scan &rArr; lr1110_modem_event_process &rArr; lr1110_modem_get_event &rArr; lr1110_modem_get_event_size &rArr; lr1110_modem_hal_read &rArr; lr1110_modem_hal_wakeup &rArr; lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_execute_scan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>

<P><STRONG><a name="[e5]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[95]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[99]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[96]"></a>I2C_TransferConfig</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32l4xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[94]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[97]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[9a]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[5f]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[d8]"></a>UART_EndRxTransfer</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndTransmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[b5]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[b6]"></a>RCCEx_PLLSAI2_Config</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[b2]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[b3]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[10b]"></a>accelerometer_irq1_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lis2de12.o(i.accelerometer_irq1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = accelerometer_irq1_init &rArr; hal_gpio_init_in &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_in
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelerometer_init
</UL>

<P><STRONG><a name="[119]"></a>compensate_humidity</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, bmp280.o(i.compensate_humidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = compensate_humidity
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_fixed
</UL>

<P><STRONG><a name="[118]"></a>compensate_pressure</STRONG> (Thumb, 410 bytes, Stack size 56 bytes, bmp280.o(i.compensate_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = compensate_pressure &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_fixed
</UL>

<P><STRONG><a name="[115]"></a>read_calibration_data</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, bmp280.o(i.read_calibration_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = read_calibration_data &rArr; read_register16 &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_register16
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
</UL>

<P><STRONG><a name="[113]"></a>read_data</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, bmp280.o(i.read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = read_data &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_fixed
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hum_calibration_data
</UL>

<P><STRONG><a name="[116]"></a>read_hum_calibration_data</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bmp280.o(i.read_hum_calibration_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = read_hum_calibration_data &rArr; read_register16 &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_register16
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
</UL>

<P><STRONG><a name="[1c3]"></a>read_register16</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, bmp280.o(i.read_register16))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = read_register16 &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hum_calibration_data
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_calibration_data
</UL>

<P><STRONG><a name="[114]"></a>write_register8</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, bmp280.o(i.write_register8))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = write_register8 &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
</UL>

<P><STRONG><a name="[75]"></a>on_wifi_scan_timeout_event</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wifi_scan.o(i.on_wifi_scan_timeout_event))
<BR>[Address Reference Count : 1]<UL><LI> wifi_scan.o(i.wifi_init)
</UL>
<P><STRONG><a name="[123]"></a>gnss_scan_configure</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gnss_scan.o(i.gnss_scan_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = gnss_scan_configure &rArr; lr1110_modem_gnss_set_constellations_to_use &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_gnss_set_constellations_to_use
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_set_type
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnss_scan_init
</UL>

<P><STRONG><a name="[61]"></a>on_gnss_scan_timeout_event</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gnss_scan.o(i.on_gnss_scan_timeout_event))
<BR>[Address Reference Count : 1]<UL><LI> gnss_scan.o(i.gnss_scan_init)
</UL>
<P><STRONG><a name="[1a7]"></a>lr1110_modem_compute_crc</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, lr1110_modem_hal.o(i.lr1110_modem_compute_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lr1110_modem_compute_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>

<P><STRONG><a name="[1a8]"></a>lr1110_modem_hal_wait_on_busy</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lr1110_modem_hal.o(i.lr1110_modem_hal_wait_on_busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lr1110_modem_hal_wait_on_busy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_time_ms
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wakeup
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>

<P><STRONG><a name="[1a9]"></a>lr1110_modem_hal_wait_on_unbusy</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lr1110_modem_hal.o(i.lr1110_modem_hal_wait_on_unbusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lr1110_modem_hal_wait_on_unbusy &rArr; hal_rtc_get_time_ms &rArr; hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_time_ms
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_write
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_wakeup
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_hal_read
</UL>

<P><STRONG><a name="[64]"></a>on_lr1110_modem_reset_timeout_event</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lr1110_modem_hal.o(i.on_lr1110_modem_reset_timeout_event))
<BR>[Address Reference Count : 1]<UL><LI> lr1110_modem_hal.o(i.lr1110_modem_hal_reset)
</UL>
<P><STRONG><a name="[173]"></a>interpret_basic_complete_result_from_buffer</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lr1110_modem_wifi.o(i.interpret_basic_complete_result_from_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = interpret_basic_complete_result_from_buffer &rArr; uint64_from_array
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint64_from_array
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_from_array
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_wifi_read_mac_address_from_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_read_complete_results
</UL>

<P><STRONG><a name="[177]"></a>interpret_basic_mac_type_channel_result_from_buffer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lr1110_modem_wifi.o(i.interpret_basic_mac_type_channel_result_from_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = interpret_basic_mac_type_channel_result_from_buffer &rArr; lr1110_wifi_read_mac_address_from_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_wifi_read_mac_address_from_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_wifi_read_basic_results
</UL>

<P><STRONG><a name="[174]"></a>lr1110_wifi_read_mac_address_from_buffer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lr1110_modem_wifi.o(i.lr1110_wifi_read_mac_address_from_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lr1110_wifi_read_mac_address_from_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_basic_mac_type_channel_result_from_buffer
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_basic_complete_result_from_buffer
</UL>

<P><STRONG><a name="[175]"></a>uint16_from_array</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lr1110_modem_wifi.o(i.uint16_from_array))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_basic_complete_result_from_buffer
</UL>

<P><STRONG><a name="[176]"></a>uint64_from_array</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lr1110_modem_wifi.o(i.uint64_from_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uint64_from_array
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_basic_complete_result_from_buffer
</UL>

<P><STRONG><a name="[18f]"></a>lr1110_modem_board_init_tcxo_io</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, lr1110-modem-board.o(i.lr1110_modem_board_init_tcxo_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = lr1110_modem_board_init_tcxo_io &rArr; lr1110_modem_system_set_tcxo_mode &rArr; lr1110_modem_hal_write &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_get_tcxo_wakeup_time
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_system_set_tcxo_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init
</UL>

<P><STRONG><a name="[134]"></a>hal_gpio_init</STRONG> (Thumb, 470 bytes, Stack size 48 bytes, smtc_hal_gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_attach
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_out
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_in
</UL>

<P><STRONG><a name="[140]"></a>i2c_read_buffer</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, smtc_hal_i2c.o(i.i2c_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = i2c_read_buffer &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_read_buffer
</UL>

<P><STRONG><a name="[142]"></a>i2c_write_buffer</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, smtc_hal_i2c.o(i.i2c_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = i2c_write_buffer &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_write_buffer
</UL>

<P><STRONG><a name="[143]"></a>hal_mcu_deinit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = hal_mcu_deinit &rArr; hal_uart_deinit &rArr; HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_deinit_io
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_deinit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_enter_stop_mode
</UL>

<P><STRONG><a name="[147]"></a>hal_mcu_deinit_periph</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_deinit_periph))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hal_mcu_deinit_periph &rArr; external_supply_deinit &rArr; hal_gpio_deinit &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_supply_deinit
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_deinit
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_gpio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_enter_stop_mode
</UL>

<P><STRONG><a name="[149]"></a>hal_mcu_gpio_deinit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.hal_mcu_gpio_deinit))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit_periph
</UL>

<P><STRONG><a name="[14a]"></a>hal_mcu_gpio_init</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_mcu_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DBGMCU_DisableDBGStopMode
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DBGMCU_DisableDBGStandbyMode
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DBGMCU_DisableDBGSleepMode
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[15a]"></a>hal_mcu_lpm_enter_stop_mode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_lpm_enter_stop_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = hal_mcu_lpm_enter_stop_mode &rArr; hal_mcu_deinit &rArr; hal_uart_deinit &rArr; HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnterSTOP2Mode
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_end
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_begin
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit_periph
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_low_power_handler
</UL>

<P><STRONG><a name="[15b]"></a>hal_mcu_lpm_exit_stop_mode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_lpm_exit_stop_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = hal_mcu_lpm_exit_stop_mode &rArr; hal_mcu_reinit &rArr; hal_spi_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_end
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_critical_section_begin
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit_periph
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_low_power_handler
</UL>

<P><STRONG><a name="[151]"></a>hal_mcu_pvd_config</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, smtc_hal_mcu.o(i.hal_mcu_pvd_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_mcu_pvd_config &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnablePVD
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_ConfigPVD
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[15f]"></a>hal_mcu_reinit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_reinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = hal_mcu_reinit &rArr; hal_spi_init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; hal_mcu_panic &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lr1110_modem_board_init_io
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_system_clock_re_config_after_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_exit_stop_mode
</UL>

<P><STRONG><a name="[160]"></a>hal_mcu_reinit_periph</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, smtc_hal_mcu.o(i.hal_mcu_reinit_periph))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hal_mcu_reinit_periph &rArr; external_supply_init &rArr; hal_gpio_init_out &rArr; hal_gpio_init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_supply_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_lpm_exit_stop_mode
</UL>

<P><STRONG><a name="[14f]"></a>hal_mcu_system_clock_config</STRONG> (Thumb, 224 bytes, Stack size 240 bytes, smtc_hal_mcu.o(i.hal_mcu_system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = hal_mcu_system_clock_config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_init
</UL>

<P><STRONG><a name="[163]"></a>hal_mcu_system_clock_re_config_after_stop</STRONG> (Thumb, 190 bytes, Stack size 232 bytes, smtc_hal_mcu.o(i.hal_mcu_system_clock_re_config_after_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = hal_mcu_system_clock_re_config_after_stop &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reinit
</UL>

<P><STRONG><a name="[62]"></a>on_soft_watchdog_event</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, smtc_hal_mcu.o(i.on_soft_watchdog_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = on_soft_watchdog_event &rArr; hal_mcu_trace_print &rArr; vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smtc_hal_mcu.o(i.hal_mcu_init_software_watchdog)
</UL>
<P><STRONG><a name="[167]"></a>vprint</STRONG> (Thumb, 42 bytes, Stack size 280 bytes, smtc_hal_mcu.o(i.vprint))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = vprint &rArr; hal_uart_tx &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>

<P><STRONG><a name="[168]"></a>hal_rtc_get_calendar_time</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, smtc_hal_rtc.o(i.hal_rtc_get_calendar_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_rtc_get_calendar_time &rArr; rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_tick_2_ms
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_timestamp_in_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_time_ms
</UL>

<P><STRONG><a name="[169]"></a>rtc_get_timestamp_in_ticks</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, smtc_hal_rtc.o(i.rtc_get_timestamp_in_ticks))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rtc_get_timestamp_in_ticks &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_set_time_ref_in_ticks
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_timer_elapsed_value
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_calendar_time
</UL>

<P><STRONG><a name="[1c8]"></a>timer_exists</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, smtc_hal_tmr_list.o(i.timer_exists))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>

<P><STRONG><a name="[1c4]"></a>timer_insert_new_head_timer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, smtc_hal_tmr_list.o(i.timer_insert_new_head_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = timer_insert_new_head_timer &rArr; timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>

<P><STRONG><a name="[1c9]"></a>timer_insert_timer</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, smtc_hal_tmr_list.o(i.timer_insert_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_insert_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>

<P><STRONG><a name="[1c5]"></a>timer_set_timeout</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, smtc_hal_tmr_list.o(i.timer_set_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = timer_set_timeout &rArr; hal_rtc_start_alarm &rArr; HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_start_alarm
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_timer_elapsed_value
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_get_minimum_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_handler
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert_new_head_timer
</UL>

<P><STRONG><a name="[ed]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ec]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[f0]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ef]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[60]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
